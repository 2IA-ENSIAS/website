{"version":3,"file":"static/js/333.011b86dd.chunk.js","mappings":"+LAEaA,GAAoBC,E,QAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kdAc9B,SAACC,GAAC,OAAMA,EAAEC,KAAO,UAAY,QAAQ,IACxC,SAACD,GAAC,OAAMA,EAAEC,KAAO,IAAM,GAAG,ICjBhC,SAASC,EAASC,GACvB,OAAe,OAARA,QAAwBC,IAARD,GAAqBA,IAAQA,EAAIE,MAC1D,CAEO,I,SCsCP,EArCoB,WAClB,IAAAC,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAE1BI,EAAiB,SAACC,GACtB,IAAMC,EDLe,SACvBC,EACAC,GAEA,GAAsB,qBAAXX,OACT,OAAO,EAET,IAaEY,EAbIC,EAASF,EAAM,YAAc,aAC/BG,EAAS,EAgBb,OAfIjB,EAASa,GACXI,EAAUJ,EAAkBC,EAAM,cAAgB,eACzCD,aAAkBK,SAC3BD,EAASJ,EAAOM,gBAAgBH,GACvBH,IACTI,EAAUJ,EAAuBG,IAGjCH,IACCb,EAASa,IACQ,kBAAXI,IAEPA,EACkB,QADZF,GAAKF,EAAuBO,eAAkBP,GACjDM,uBAAe,IAAAJ,OAAA,EADTA,EACYC,IAEhBC,CACT,CCpB0BI,CAAUV,EAAME,QAAQ,IAEzCL,GAAcI,EAAgB,IACjCH,GAAc,GACLG,GAAiB,KAC1BH,GAAc,EAElB,GAEAa,EAAAA,EAAAA,YAAU,WAER,OADAnB,OAAOoB,iBAAiB,SAAUb,GAC3B,WACLP,OAAOqB,oBAAoB,SAAUd,EACvC,CAEF,GAAG,IAWH,OACEe,EAAAA,EAAAA,KAAC/B,EAAiB,CAACgC,QAVJ,WACCC,SAASC,eAAe,SAChCC,eAAe,CACrBC,SAAU,SACVC,MAAO,MACPC,OAAQ,WAEZ,EAGwCjC,KAAMS,EAAWyB,UACrDR,EAAAA,EAAAA,KAACS,EAAAA,EAAO,CAACC,IAAI,iBAAiBC,MAAM,OAAOC,OAAO,UAGxD,C","sources":["common/ScrollToTop/styles.ts","common/utils/getWindow.ts","common/ScrollToTop/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ScrollUpContainer = styled(\"div\")<{\r\n  show: boolean;\r\n}>`\r\n  padding: 10px;\r\n  position: fixed;\r\n  right: 30px;\r\n  bottom: 30px;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  background: rgb(241, 242, 243);\r\n  text-align: center;\r\n  align-items: center;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease-in-out;\r\n  visibility: ${(p) => (p.show ? \"visible\" : \"hidden\")};\r\n  opacity: ${(p) => (p.show ? \"1\" : \"0\")};\r\n  display: flex;\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background: rgb(224, 224, 224);\r\n  }\r\n\r\n  @media screen and (max-width: 1240px) {\r\n    display: none;\r\n  }\r\n`;\r\n","export function isWindow(obj: typeof window | null): boolean {\r\n  return obj !== null && obj !== undefined && obj === obj.window;\r\n}\r\n\r\nexport const getScroll = (\r\n  target: HTMLElement | Window | Document | null,\r\n  top: boolean\r\n): number => {\r\n  if (typeof window === \"undefined\") {\r\n    return 0;\r\n  }\r\n  const method = top ? \"scrollTop\" : \"scrollLeft\";\r\n  let result = 0;\r\n  if (isWindow(target as typeof window)) {\r\n    result = (target as Window)[top ? \"pageYOffset\" : \"pageXOffset\"];\r\n  } else if (target instanceof Document) {\r\n    result = target.documentElement[method];\r\n  } else if (target) {\r\n    result = (target as HTMLElement)[method];\r\n  }\r\n  if (\r\n    target &&\r\n    !isWindow(target as typeof window) &&\r\n    typeof result !== \"number\"\r\n  ) {\r\n    result = ((target as HTMLElement).ownerDocument || (target as Document))\r\n      .documentElement?.[method];\r\n  }\r\n  return result;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { SvgIcon } from \"../SvgIcon\";\r\nimport { ScrollUpContainer } from \"./styles\";\r\nimport { getScroll } from \"../utils/getWindow\";\r\n\r\nconst ScrollToTop = () => {\r\n  const [showScroll, setShowScroll] = useState(false);\r\n\r\n  const checkScrollTop = (event: any) => {\r\n    const offsetFromTop = getScroll(event.target, true);\r\n\r\n    if (!showScroll && offsetFromTop > 350) {\r\n      setShowScroll(true);\r\n    } else if (offsetFromTop <= 350) {\r\n      setShowScroll(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", checkScrollTop);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", checkScrollTop);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const scrollUp = () => {\r\n    const element = document.getElementById(\"intro\") as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ScrollUpContainer onClick={scrollUp} show={showScroll}>\r\n      <SvgIcon src=\"scroll-top.svg\" width=\"20px\" height=\"20px\" />\r\n    </ScrollUpContainer>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n"],"names":["ScrollUpContainer","styled","_templateObject","_taggedTemplateLiteral","p","show","isWindow","obj","undefined","window","_useState","useState","_useState2","_slicedToArray","showScroll","setShowScroll","checkScrollTop","event","offsetFromTop","target","top","_documentElement","method","result","Document","documentElement","ownerDocument","getScroll","useEffect","addEventListener","removeEventListener","_jsx","onClick","document","getElementById","scrollIntoView","behavior","block","inline","children","SvgIcon","src","width","height"],"sourceRoot":""}