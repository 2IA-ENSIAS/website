{"version":3,"file":"static/js/290.234841a5.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#D32F2F\"};\r\n  color: ${(p) => (p.color ? \"#D32F2F\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Button\r\n                            key={id}\r\n                            color={item.color}\r\n                            onClick={() => scrollTo(\"about\")}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item: {\r\n                            title: string;\r\n                            content: string;\r\n                            icon: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={11}>\r\n                              <SvgIcon\r\n                                src={item.icon}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                              />\r\n                              <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara>\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","ContentSection","Content","_templateObject2","StyledRow","Row","_templateObject3","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","MinPara","_templateObject7","ButtonWrapper","_templateObject8","withTranslation","icon","title","content","section","button","t","id","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","map","item","document","getElementById","scrollIntoView","behavior","scrollTo","span"],"sourceRoot":""}