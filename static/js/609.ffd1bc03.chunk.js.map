{"version":3,"file":"static/js/609.ffd1bc03.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","common/utils/useForm.tsx","common/utils/validationRules.ts","components/Block/styles.ts","components/Block/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","common/TextArea/index.tsx","components/ContactForm/styles.ts","components/ContactForm/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#D32F2F\"};\r\n  color: ${(p) => (p.color ? \"#D32F2F\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const useForm = (validate: any) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"success\"]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    // Your url for API\r\n    const url = \"\";\r\n    if (Object.values(values).every((x) => x !== \"\")) {\r\n      axios\r\n        .post(url, {\r\n          ...values,\r\n        })\r\n        .then(() => {\r\n          setShouldSubmit(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues((values) => (values = { name: \"\", email: \"\", message: \"\" }));\r\n      openNotificationWithIcon();\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n","import { validateProps } from \"../../common/types\";\r\n\r\nexport default function validate(values: validateProps) {\r\n  let errors = {} as validateProps;\r\n\r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n  if (!values.message) {\r\n    errors.message = \"Message is required\";\r\n  }\r\n  return errors;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  t: TFunction;\r\n}\r\n\r\nconst Block = ({ title, content, t }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{t(title)}</h6>\r\n      <TextWrapper>\r\n        <Content>{t(content)}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Block);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{t(name)}</Label>\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { StyledTextArea, StyledContainer, Label } from \"./styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst TextArea = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <StyledContainer>\r\n    <Label htmlFor={name}>{t(name)}</Label>\r\n    <StyledTextArea\r\n      placeholder={t(placeholder)}\r\n      id={name}\r\n      name={name}\r\n      onChange={onChange}\r\n    />\r\n  </StyledContainer>\r\n);\r\n\r\nexport default withTranslation()(TextArea);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactContainer = styled(\"div\")`\r\n  padding: 5rem 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  width: 100%;\r\n  max-width: 520px;\r\n\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Slide, Zoom } from \"react-awesome-reveal\";\r\nimport { ContactProps, ValidationTypeProps } from \"./types\";\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport validate from \"../../common/utils/validationRules\";\r\nimport { Button } from \"../../common/Button\";\r\nimport Block from \"../Block\";\r\nimport Input from \"../../common/Input\";\r\nimport TextArea from \"../../common/TextArea\";\r\nimport { ContactContainer, FormGroup, Span, ButtonContainer } from \"./styles\";\r\n\r\nconst Contact = ({ title, content, id, t }: ContactProps) => {\r\n  const { values, errors, handleChange, handleSubmit } = useForm(validate);\r\n\r\n  const ValidationType = ({ type }: ValidationTypeProps) => {\r\n    const ErrorMessage = errors[type as keyof typeof errors];\r\n    return (\r\n      <Zoom direction=\"left\">\r\n        <Span>{ErrorMessage}</Span>\r\n      </Zoom>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ContactContainer id={id}>\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col lg={12} md={11} sm={24} xs={24}>\r\n          <Slide direction=\"left\" triggerOnce>\r\n            <Block title={title} content={content} />\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Slide direction=\"right\" triggerOnce>\r\n            <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Your Name\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"name\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Your Email\"\r\n                  value={values.email || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"email\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <TextArea\r\n                  placeholder=\"Your Message\"\r\n                  value={values.message || \"\"}\r\n                  name=\"message\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"message\" />\r\n              </Col>\r\n              <ButtonContainer>\r\n                <Button name=\"submit\">{t(\"Submit\")}</Button>\r\n              </ButtonContainer>\r\n            </FormGroup>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Contact);\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","useForm","validate","_useState","useState","name","email","message","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","shouldSubmit","setShouldSubmit","useEffect","Object","keys","length","notification","description","handleChange","event","persist","_objectSpread","_defineProperty","target","value","handleSubmit","preventDefault","every","x","axios","then","test","Content","Container","_templateObject2","TextWrapper","_templateObject3","withTranslation","title","content","t","_jsxs","StyledInput","StyledContainer","StyledTextArea","Label","placeholder","onChange","htmlFor","id","ContactContainer","FormGroup","Span","ButtonContainer","_templateObject4","_useForm","ValidationType","_ref2","type","ErrorMessage","Zoom","direction","Row","justify","align","Col","lg","md","sm","xs","Slide","triggerOnce","Block","autoComplete","onSubmit","span","Input","TextArea"],"sourceRoot":""}